object Deps {
    const val APP_COMPAT = "androidx.appcompat:appcompat:${Versions.APP_COMPAT}"
    const val CONSTRAINT_LAYOUT = "androidx.constraintlayout:constraintlayout:${Versions.CONSTRAINT_LAYOUT}"
    const val SWIPE_REFRESH ="androidx.swiperefreshlayout:swiperefreshlayout:${Versions.SWIPE_REFRESH}"
    const val MATERIAL = "com.google.android.material:material:${Versions.MATERIAL}"
    const val RECYCLER_VIEW = "androidx.recyclerview:recyclerview:${Versions.RECYCLER_VIEW}"
    const val CORE_KTX = "androidx.core:core-ktx:${Versions.CORE_KTX}"
    const val OKHTTP = "com.squareup.okhttp3:okhttp:${Versions.OKHTTP}"
    const val OKHTTP_LOGGING_INTERCEPTOR = "com.squareup.okhttp3:logging-interceptor:${Versions.OKHTTP}"
    const val RETROFIT = "com.squareup.retrofit2:retrofit:${Versions.RETROFIT}"
    const val REFLECT = "org.jetbrains.kotlin:kotlin-reflect:${Versions.REFLECT}"
    const val MOSHI_CONVERTER = "com.squareup.retrofit2:converter-moshi:${Versions.RETROFIT}"
    const val MOSHI = "com.squareup.moshi:moshi-kotlin:${Versions.MOSHI}"
    const val LIFECYCLESCOPE = "androidx.lifecycle:lifecycle-runtime-ktx:${Versions.LIFECYCLE}"
    const val VIEWMODELSCOPE = "androidx.lifecycle:lifecycle-viewmodel-ktx:${Versions.LIFECYCLE}"
    const val ONESIGNAL = "com.onesignal:OneSignal:${Versions.ONESIGNAL}"
    const val LEAK_CANARY = "com.squareup.leakcanary:leakcanary-android:${Versions.LEAK_CANARY}"
    const val COROUTINES_ANDROID = "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Versions.COROUTINES}"
    const val COROUTINES_CORE = "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.COROUTINES}"
    const val FIREBASE_COROUTINES = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:${Versions.FIREBASE_COROUTINES}"
    const val FIREBASE_STORAGE = "com.google.firebase:firebase-storage-ktx:${Versions.FIREBASE_STORAGE}"
    const val FIREBASE_FIRESTORE = "com.google.firebase:firebase-firestore-ktx:${Versions.FIREBASE_FIRESTORE}"
    const val FIRECOIL = "com.github.rosariopfernandes:firecoil:${Versions.FIRECOIL}"
    const val FIREBASE_AUTH = "com.google.android.gms:play-services-auth:${Versions.FIREBASE_AUTH}"
    const val FIREBASE_AUTH_KTX = "com.google.firebase:firebase-auth-ktx:${Versions.FIREBASE_AUTH_KTX}"
    const val FIREBASE_GMS = "com.google.android.gms:play-services-auth:${Versions.FIREBASE_GMS}"
    const val LOTTIE = "com.airbnb.android:lottie:${Versions.LOTTIE}"
    const val INJECT = "javax.inject:javax.inject:1"
    const val COIL = "io.coil-kt:coil:${Versions.COIL}"
    const val ANDROID_IMAGE_CROPPER = "com.github.CanHub:Android-Image-Cropper:${Versions.IMAGE_CROPPER}"
    const val DAGGER_HILT = "com.google.dagger:hilt-android:${Versions.DAGGER_HILT}"
    const val DAGGER_HILT_WORK = "androidx.hilt:hilt-work:${Versions.DAGGER_HILT_WORK}"
    const val DAGGER_HILT_VIEWMODEL = "androidx.hilt:hilt-lifecycle-viewmodel:${Versions.ANDROIDX_DAGGER_HILT}"
    const val NAVIGATION_UI_KTX = "androidx.navigation:navigation-ui-ktx:${Versions.NAVIGATION}"
    const val NAVIGATION_FRAGMENT_KTX = "androidx.navigation:navigation-fragment-ktx:${Versions.NAVIGATION}"
    const val ROOM = "androidx.room:room-runtime:${Versions.ROOM}"
    const val ROOM_KTX = "androidx.room:room-ktx:${Versions.ROOM}"
    const val JETPACK_SECURITY = "androidx.security:security-crypto:${Versions.JETPACK_SECURITY}"
    const val WORK_MANAGER = "androidx.work:work-runtime-ktx:${Versions.WORK_MANAGER}"
    const val LIVEDATA = "androidx.lifecycle:lifecycle-livedata-ktx:${Versions.LIFECYCLE}"
}

object AnnotationDeps {
    const val DAGGER_HILT_COMPILER = "com.google.dagger:hilt-android-compiler:${Versions.DAGGER_HILT}"
    const val DAGGER_HILT_WORK_COMPILER = "androidx.hilt:hilt-compiler:${Versions.DAGGER_HILT_WORK}"
    const val MOSHI_CODE_GEN = "com.squareup.moshi:moshi-kotlin-codegen:${Versions.MOSHI}"
    const val ROOM_COMPILER = "androidx.room:room-compiler:${Versions.ROOM}"
    const val LIFECYCLE = "androidx.lifecycle:lifecycle-compiler:${Versions.LIFECYCLE}"
}

object UnitTestDeps {
    const val CORE = "androidx.arch.core:core-testing:${Versions.CORE}"
    const val COROUTINES_TEST = "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Versions.COROUTINES}"
    const val JUNIT = "junit:junit:${Versions.JUNIT}"
    const val HILT_TEST = "com.google.dagger:hilt-android-testing:${Versions.DAGGER_HILT}"
    const val KLUENT = "org.amshove.kluent:kluent:${Versions.KLUENT}"
    const val MOCK_WEB_SERVER = "com.squareup.okhttp3:mockwebserver:${Versions.OKHTTP}"
    const val MOCKK = "io.mockk:mockk:${Versions.MOCKK}"
    const val ROBOLECTRIC = "org.robolectric:robolectric:${Versions.ROBOLECTRIC}"
    const val TRUTH = "com.google.truth:truth:${Versions.GOOGLE_TRUTH}"
    const val TURBINE = "app.cash.turbine:turbine:${Versions.TURBINE}"
    const val RUNNER = "androidx.test:runner:${Versions.RUNNER}"
    const val JUNIT_EXT = "androidx.test.ext:junit-ktx:${Versions.JUNIT_EXT}"
    const val WORKER_TEST = "androidx.work:work-testing:${Versions.WORK_MANAGER}"
}

object UITestDeps {
    const val ANDROIDX_ESPRESSO = "androidx.test.espresso:espresso-core:${Versions.ANDROIDX_ESPRESSO}"
    const val FRAGMENT = "androidx.fragment:fragment-testing:${Versions.FRAGMENT}"
    const val BARISTA = "com.schibsted.spain:barista:${Versions.BARISTA}"
    const val KLUENT = "org.amshove.kluent:kluent-android:${Versions.KLUENT}"
    const val MOCKK = "io.mockk:mockk-android:${Versions.MOCKK}"
    const val NAVIGATION = "androidx.navigation:navigation-testing:${Versions.NAVIGATION}"
}